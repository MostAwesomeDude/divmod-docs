Divmod uses the Twisted coding standard.

In addition, we are trying to make certain aspects of the Twisted coding standard stricter.  For example:

 * There should be 3 blank lines between module-level suites, such as classes and top-level functions.
 * There should be 2 blank lines between class-level suites, such as methods.
 * Within a class, the ordering of the elements is:
    1. docstring
    1. {{{implements()}}}
    1. class attributes
    1. Python special methods, starting with {{{__new__}}} if present, then {{{__init__}}}.
    1. Methods part of no interface
    1. Methods implementing an interface, grouped by interface, prefixed with a comment like this:
{{{
#!python
# IYourInterface
}}}

(The effort to make the Twisted coding standard strict enough to avoid all syntactic inconsistencies is informally referred to by some as 'PEP 8888'.  It is not actually a PEP yet.)