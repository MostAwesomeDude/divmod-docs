{{{
This is work in progress and will hopefully evolve into something useful the next few days

Why am I'm writing this? To get myself a better understanding of the way Mantissa ticks.
For the very reason writing this, some things got already more obvious.
And if it is helpful for somebody else too, it has more than served its purpose.

I'm not a native English speaker, if there are too stilted formulations correct them please.
This is valid of course for any errors due to my missing comprehension too.
And as usual, if you find typos you are granted to keep them.
}}}

= !HowTo write a [wiki:DivmodMantissa Mantissa] application... =

== Intro or Why another document? ==

So you have found your way here, perhaps reading through the other pages on this wiki, following irc-logs and blog-postings and you are still uncertain what this talking about [wiki:DivmodMantissa Mantissa] and [wiki:DivmodAxiom Axiom] is and what these things can do for you? Or is it what you can do with them?

Probably we have a few things in common:

 * you havn't imbibed [http://www.python.org Python] from your's infancy - I'm an old C programmer, started with that kind of stuff nearly 25 years ago
 * but the language gripped you and maybe you even had physical contact with [wiki:TwistedFramework Twisted] and Nevow which are some sort of [wiki:DivmodMantissa Mantissa] foundations ''( and/or inspiration?)''.
 * still technical terms and other slang produce (some) trouble, but in a dark meander of your brain there is something nudging you that such a thing like a multi-protocol, objects manipulating, event-driven ... application server is a too interesting find to throw it back into the deep net ocean
 * on the other hand you want to build an application and if you don't want to begin with Adam and Eve you need to choose a tool for this job. Maybe you had your time with Zope, looked at other Python frameworks, observed !TurboGears, Django and even !RubyonRails. But they are/seem to be too web-orientated, too web-focussed. Which is quite ok in todays Web 2.0 wonderland, but you and I know that the browser isn't the Internet and that there are a lot more ways to interchange information, and many things that existed long before someone put three 'w's in a row. ''(some comparison between them, even if they are only frameworks, maybe in a later chapter?)''

Sounds familiar? Ok, then let's walk a few steps together on my witty trail towards our first Mantissa app.

{{{
Small sidekick:

Btw. don't get me wrong, I like the idea of a browser being a client platform or framework.
And having a semantic web. And I'm a big fan of convergence!
But does every coffee mug needs its web (user) interface?
Even houses have web-interfaces nowdays to monitor them - and I know
quite something about this issue - but the heating system is still broken.
Shiny interfaces can only obfuscate basic errors in application design, not fix them. 8)
}}}

Vexed about my babbling? Not even amused or at least thought-provoked? Then the following isn't for you, as you can probably do everything even before breakfast. ;-)

Enough words, let's dive into some action. ''(find a better translation?)''

== Let the games begin! ==

=== Why Mantissa? What's the difference? ===

When I first read about [wiki:DivmodMantissa Mantissa], I think it was [http://www.livejournal.com/users/jcalderone/12585.html this blog entry announcing v0.1] or on the !TwistedMatrix mailing-list, the slogan [wiki:MantissaIsTheDeploymentTarget Mantissa Is The Deployment Target] caught my attention.

In ancient times ''strikt separation between GUI and application logic'' was the key, and a virtue. Something that got lost over the web-app gold-rush years, over the raise of such monstrosities like PHP et al. In this respect the announce of an application server, that seems to not only separate the presentation envelopment but also the protocol envelopment certainly has something inspiring.


''(probably more here, but let's work on the structure now)''

=== Theory of Forms ===

Behind every good computer program stands a good idea.

''Idea'' in the meaning of a flash of a genius, which might make the program even successful.[[BR]] And ''idea'' in the meaning of Plato's ideals, which might make the program even useful.

''(at least something about application design and why Mantissa could enforce a good one and still not spoon-feeding the programmer too much)''



== Prologue ==


'Hey' - I hear you say - 'more than a page of monologue, and no single line of Python?'.[[BR]] You are right, but I think it is worth to first think about what to do and why doing it in this or in that way.[[BR]]
And you are right again, I shouldn't bore you to death with theory, let's start with something more substantial. 

Let me expatiate my little idea.

My son, eight years, asked me some time ago for an interactive map where one could mark places where friends live, where we have been and which he wants to visit once. Something like the ones that hang in offices on the wall, the spots marked with little flags or needles with colored heads.

Perhaps something to enqueue in the growing row of apps sitting upon Google Maps, but a few days ago I stumbled upon someones implementation of a worldclock displaying the time for some cities on a equirectangular projection of satellite images, [http://visibleearth.nasa.gov/view_rec.php?vev1id=11605 NASA's stunning Blue Marble]. I had to modify the worldclock into a mere !JavaScript implementation and while doing this I thought about personalizing the view, the points of interest, a way to interactively add new POIs, to socialize them. And while I started with a [http://netzflocken.de/articles/2005/12/20/worldclock-pimp-up-with-javascript second Athena/Nevow based version] I realized that this could be a nice sandbox project for Mantissa, giving me a reason looking deeper into it.

And while this little idea isn't something that would really fit into its first meaning, at least it should look well in the second.  


== The Drama 1st Act - looking at the blue-print ==

''(explaining the application framework)''


== Second Act - defining the schema objects ==

''(defining the schema objects)''

== Third Act - there's a light ==

''(have a basic app up and running)''


== more to come ==

''(administrative tasks)''

''(Mantissa specifics, signup, login, personalization,... )''

''(polishing the surface(s) )''

''(schema upgrades)''

''(interact with other services, jabber, rss, google map?)''