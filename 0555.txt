= DivmodAxiom : Concurrency and Scalability =

Several questions seem to keep coming relating to these issues; this is an attempt to summarize the discussion around them.

== Why is the API synchronous? ==

Generally database access through the SQLite backend is fast enough that database operations don't block long enough to be of concern.

== Are you sure? ==

Sort of. Current usage seems to indicate that it works out just fine, but you should conduct your own testing to determine whether this model is suitable for your particular usage patterns.

== Is it thread-safe, though? ==

Currently, no; accessing a Store concurrently from different threads will result in breakage. Accessing different Stores should be fine, though.

== But how do you achieve scalability then? ==

Use multiple databases. For example, DivmodMantissa has per-user and per-application stores.

== What if that isn't good enough? ==

If you do need finer-grained concurrency, then running transactions in separate threads is the way to go about it. Glyph's blog has [http://www.livejournal.com/users/glyf/2005/09/24/ more on this subject]; also see #537 which covers the DivmodAxiom implementation of this model.