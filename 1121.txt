= Nevow Tutorial =

== Building a Page Hierarchy ==

Now we introduce a couple of more advanced concepts:

{{{
#!python
######################################################################
# Run using 'twistd -noy file.tac', then point your browser to
# http://localhost:8080
# A very simple Nevow site.
# Don't do it this way. Better ways are coming.
######################################################################

from twisted.application import service, internet

from nevow               import appserver
from nevow               import rend
from nevow               import loaders
from nevow               import tags as T

class SubPage ( rend.Page ):
    docFactory = loaders.stan (
        T.html [ T.head ( title = 'Sub Page' ),
                 T.body [ T.h1 [ 'This is a Sub Page' ],
                          T.p [ 'I lack much of interest.' ]
                          ]
                 ]
        )
        
class MainPage ( rend.Page ):

    docFactory = loaders.stan (
        T.html [ T.head ( title = 'Main Page' ),
                 T.body [ T.h1 [ 'This is the Main Page' ],
                          T.p [ 'However, try going ',
                                T.a ( href = 'sub' ) [ 'here' ]
                                ]
                          ]
                 ]
        )

    def childFactory ( self, ctx, name ):
        return SubPage()
    
######################################################################
# Nevow Boilerplate
######################################################################

application = service.Application ( 'nevowdemo' )
port        = 8080
res         = MainPage()
site        = appserver.NevowSite ( res )
webService  = internet.TCPServer ( port, site )
webService.setServiceParent ( application )
}}}

Note the following:

  * We no longer use {{{renderHTTP()}}} to generate the page content;
  * Instead, a class attribute {{{docFactory}}} defines the page content;
  * A method {{{childFactory()}}} is used to access the children of a page;

Play around with this example until you're comfortable with it, then go on to DivmodTutorial/TutorialFour
